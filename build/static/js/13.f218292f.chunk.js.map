{"version":3,"sources":["components/TextInput/TextInput.js","components/FormTextField/FormTextField.js","pages/Signup.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","light","contrastText","overrides","MuiOutlinedInput","root","border","transitionDuration","color","height","MuiInputLabel","shrink","transform","input","padding","useStyles","makeStyles","backgroundColor","useLabelStyles","TextInput","React","props","ref","classes","labelClasses","fullWidth","inputComponent","label","labelText","labelWidth","multiline","type","notched","other","value","margin","variant","InputProps","InputLabelProps","FormTextField","SignUp","history","useHistory","firebase","useContext","FirebaseContext","useState","username","setUsername","bio","setBio","fullname","setFullname","emailAddress","setEmailAddress","password","setPassword","error","setError","handleSignUp","event","a","preventDefault","doesUsernameExist","auth","createUserWithEmailAndPassword","createdUserResult","user","updateProfile","displayName","firestore","collection","add","userId","uid","toLowerCase","following","followers","avatar","dateCreated","Date","now","push","message","useEffect","document","title","className","width","fill","onSubmit","method","aria-label","placeholder","onChange","target","style","to","ROUTES"],"mappings":"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","file":"static/js/13.f218292f.chunk.js","sourcesContent":["// styles\nimport { FormControl, InputBase } from \"@material-ui/core\";\nimport { Input, TextField } from \"@material-ui/core\";\nimport * as React from \"react\";\n\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  makeStyles,\n} from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fa100a\",\n    },\n    secondary: {\n      light: \"#0066ff\",\n      main: \"#fff \",\n\n      contrastText: \"#ffcc00\",\n    },\n  },\n  overrides: {\n    MuiOutlinedInput: {\n      root: {\n        \"&:hover:not($disabled):not($focused):not($error) $notchedOutline\": {\n          border: \"2px solid var(--primary)\",\n          transitionDuration: \".3s\",\n          color: 'var(--primary)',\n          height: \"90\"\n        },\n      },\n    },\n    MuiInputLabel: {\n      shrink: {\n        transform: \"translate(8px, 8px) scale(0.75) !important\",\n      },\n    },\n    input: { padding: \"10px 14px\" },          height: \"90\"\n  },\n});\nconst useStyles = makeStyles({\n  root: {\n    color: \"var(--textColor)\",\n    backgroundColor: \"var(--input-bg) !important\",\n    \"&.Mui-focused\": {\n      color: \"var(--textColor)\",\n    },\n  },\n  input: {\n    \"&::selection\": {\n      color: \"var(--textColor)\",\n    },\n  },\n});\nconst useLabelStyles = makeStyles({\n  root: {\n    color: \"var(--textColor)\",\n    \"&.Mui-focused\": {\n      color: \"var(--primary)\",\n    },\n  },\n});\n\nconst TextInput = React.forwardRef(function OutlinedInput(props, ref) {\n  const classes = useStyles();\n  const labelClasses = useLabelStyles();\n  const {\n    fullWidth = false,\n    inputComponent = \"input\",\n    label,\n    labelText = label,\n    labelWidth = 0,\n    multiline = false,\n    notched,\n    type,\n    value,\n    ...other\n  } = props;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <TextField\n        margin=\"normal\"\n        variant=\"outlined\"\n        label={label}\n        labelText={label}\n        fullWidth\n        InputProps={{ classes: classes, notched: false }}\n        InputLabelProps={{ classes: labelClasses }}\n        inputComponent={inputComponent}\n        multiline={multiline}\n        ref={ref}\n        type={type}\n        {...other}\n      />\n    </ThemeProvider>\n  );\n});\n\nexport default TextInput;\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nfunction FormTextField({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      placeholder={label}\r\n      error={touched && invalid}\r\n      helperText={touched && error}\r\n      {...input}\r\n      {...custom}\r\n    />\r\n  )\r\n}\r\n\r\nFormTextField.propTypes = {\r\n  formTextField: PropTypes.object\r\n}\r\n\r\nexport default FormTextField\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport FirebaseContext from \"../context/firebase\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport { doesUsernameExist } from \"../services/firebase\";\r\nimport { Logo } from \"../components/icons\";\r\nimport FormTextField from \"../components/FormTextField/FormTextField\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport TextInput from \"../components/TextInput/TextInput\";\r\n\r\nexport default function SignUp() {\r\n  const history = useHistory();\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [fullname, setFullname] = useState(\"\");\r\n  const [emailAddress, setEmailAddress] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const isInvalid = password === \"\" || emailAddress === \"\";\r\n\r\n  const handleSignUp = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const usernameExists = await doesUsernameExist(username);\r\n    if (!usernameExists) {\r\n      try {\r\n        const createdUserResult = await firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(emailAddress, password);\r\n\r\n        await createdUserResult.user.updateProfile({\r\n          displayName: username,\r\n        });\r\n\r\n        await firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .add({\r\n            userId: createdUserResult.user.uid,\r\n            username: username.toLowerCase(),\r\n            fullname,\r\n            emailAddress: emailAddress,\r\n            following: [\"0\"],\r\n            followers: [\"0\"],\r\n            bio,\r\n            avatar: \"../images/defaultProfile.svg\",\r\n            dateCreated: Date.now()\r\n          });\r\n\r\n        history.push('/');\r\n      } catch (error) {\r\n        setFullname(\"\");\r\n        setBio(\"\");\r\n        setEmailAddress(\"\");\r\n        setPassword(\"\");\r\n        setError(error.message);\r\n      }\r\n    } else {\r\n      setUsername(\"\");\r\n      setError(\"That username is already taken, please try another.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Sign Up - FireLucent \";\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"signUpContainer\">\r\n      {\" \"}\r\n      <div className=\"card\">\r\n        <div className=\"signuplogo\">\r\n          <Logo width={26} height={53} fill=\"white\" />\r\n        </div>\r\n        <div className=\"flex flex-col w-2/5\">\r\n          <div className=\"flex flex-col items-center bg-white p-4 border border-gray-primary mb-4 rounded\">\r\n            <div className=\"signupHeader\">\r\n              <span>Create your account</span>\r\n            </div>\r\n          <form onSubmit={handleSignUp} method=\"POST\">\r\n            <TextInput\r\n              aria-label=\"Enter your username\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              value={username}\r\n            />\r\n            <TextInput\r\n              aria-label=\"Enter your full name\"\r\n              type=\"text\"\r\n              placeholder=\"Full name\"\r\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\r\n              onChange={({ target }) => setFullname(target.value)}\r\n              value={fullname}\r\n            />\r\n            <TextInput\r\n              aria-label=\"Enter your email address\"\r\n              type=\"text\"\r\n              placeholder=\"Email address\"\r\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\r\n              onChange={({ target }) => setEmailAddress(target.value)}\r\n              value={emailAddress}\r\n            />\r\n            <TextInput\r\n              aria-label=\"Enter your password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              value={password}\r\n            />\r\n           {error && <p className=\"errorText\">{error}</p>}\r\n              <button style={{ width: \"fit-content\" }} className=\"defaultBtn\">\r\n                Sign up\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"flex justify-center items-center flex-col w-full bg-white p-4 rounded border border-gray-primary\">\r\n            <p className=\"text\">\r\n              Have an account?{` `}\r\n              <Link to={ROUTES.LOGIN} className=\"font-bold text-blue-medium\">\r\n                <span className=\"linkText\">Sign in</span>{\" \"}\r\n              </Link>\r\n            </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}