{"version":3,"sources":["components/post/header.js","components/Widgets/Widgets.js","pages/Home.js"],"names":["Header","username","className","to","Widgets","Home","loggedInUser","user","useUser","uid","setActiveUser","useEffect","document","title","React","useState","isDrawerBar","setIsDrawerBar","useAuth","signout","currentUser","useSelector","state","posts","marks","setMarks","db","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","post","data","get","then","querySnapshot","forEach","console","log","Provider","value","HomeBox","onClick","DrawerBar","active","Avatar","src","photoUrl","width","height","TweetBox","Feed"],"mappings":"8JAGe,SAASA,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAC/B,OACE,qBAAKC,UAAU,iDAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,IAAD,CAAMC,GAAE,aAAQF,GAAYC,UAAU,oBAAtC,SAEE,mBAAGA,UAAU,YAAb,SAA0BD,Y,4RCSrBG,I,yICGA,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAtBC,KAAsB,EACnBC,YAAQF,EAAaG,KAA7CF,EAD2C,EAC3CA,KAAMG,EADqC,EACrCA,cACdC,qBAAU,WACRC,SAASC,MAAQ,eAChB,IAJgD,MAKbC,IAAMC,UAAS,GALF,mBAK5CC,EAL4C,KAK/BC,EAL+B,OAMrBH,IAAMC,UAAS,GANM,gCAOlBG,eAPkB,KAO3CC,QAP2C,EAOlCC,YACCC,aAAY,SAACC,GAAD,OAAWA,KAAOC,MAAxCA,MACkBT,IAAMC,YATmB,mBAS5CS,EAT4C,KASrCC,EATqC,KAiCnD,OAtBAd,qBAAU,WACRe,IAAGC,WAAW,SACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXL,EACEK,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAU,CAC1BC,GAAID,EAAIC,GACRC,KAAMF,EAAIG,iBAIjB,CAACZ,IACNb,qBAAU,WAENe,IAAGC,WAAW,eAAeM,IAAI,OAAON,WAAW,WAAWU,MACjEC,MAAK,SAAAC,GACFA,EAAcC,SAAQ,SAAAP,GAClBQ,QAAQC,IAAIT,EAAIC,GAAI,OAAQD,EAAIG,gBAIrC,IAEC,cAAC,IAAoBO,SAArB,CAA8BC,MAAO,CAAErC,OAAMG,iBAA7C,SACE,cAACmC,EAAA,EAAD,UACE,0BAAS3C,UAAU,OAAnB,UACGc,GACC,qBACE8B,QAAS,kBAAM7B,GAAe,IAC9Bf,UAAU,mBAGd,cAAC6C,EAAA,EAAD,CAAWC,OAAQhC,IACnB,sBAAKd,UAAU,cAAf,UACE,qBAAK4C,QAAS,kBAAM7B,GAAe,IAAnC,SACE,cAACgC,EAAA,EAAD,CAAQC,IAAG,OAAE3C,QAAF,IAAEA,OAAF,EAAEA,EAAM4C,aAErB,qBAAKjD,UAAU,kBAAf,SACE,0CAEF,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAcA,UAAU,WAAWkD,MAAO,GAAIC,OAAQ,UAG1D,cAACC,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD","file":"static/js/11.af039957.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header({ username }) {\r\n  return (\r\n    <div className=\"flex border-b border-gray-primary h-4 p-4 py-8\">\r\n      <div className=\"flex items-center\">\r\n        <Link to={`/p/${username}`} className=\"flex items-center\">\r\n         \r\n          <p className=\"font-bold\">{username}</p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  username: PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\nimport \"./Widgets.css\";\nimport SearchInput from \"./SearchInput/SearchInput\";\nimport Topics from \"./Topics/Topics\";\nimport FriendSuggestions from \"./FriendSuggestions/FriendSuggestions\";\nimport Links from \"./Links/Links\";\n\nfunction Widgets() {\n  return (\n    <div className=\"widgets\">\n      <SearchInput placeholder=\"Search Twitter\" />\n      <Topics />\n      <FriendSuggestions />\n      <Links />\n    </div>\n  );\n}\n\nexport default Widgets;\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"../components/Sidebar\";\r\nimport Timeline from \"../components/timeline\";\r\nimport useUser from \"../hooks/use-user\";\r\nimport LoggedInUserContext from \"../context/logged-in-user\";\r\nimport HomeBox from \"../components/HomeBox/HomeBox\";\r\nimport Feed from \"../components/Feed/Feed\";\r\nimport Widgets from \"../components/Widgets/Widgets\";\r\nimport TweetBox from \"../components/Feed/TweetBox/TweetBox\";\r\nimport DrawerBar from \"../components/DrawerBar/DrawerBar\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { HomeStars, SettingsIcon } from \"../components/icons\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Post from \"../components/Feed/Post/Post\";\r\nimport PostModal from \"../components/PostModal\";\r\nimport { db } from \"../lib/firebase\";\r\nimport ProfileCard from \"../components/ProfileCard/ProfileCard\";\r\n\r\nexport default function Home({ user: loggedInUser }) {\r\n  const { user, setActiveUser } = useUser(loggedInUser.uid);\r\n  useEffect(() => {\r\n    document.title = \"Firelucent\";\r\n  }, []);\r\n  const [isDrawerBar, setIsDrawerBar] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const { signout, currentUser } = useAuth();\r\n  const { posts } = useSelector((state) => state).posts;\r\n  const [marks, setMarks] = React.useState();\r\n\r\n  useEffect(() => {\r\n    db.collection(\"Marks\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setMarks(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            post: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n  }, [marks]);\r\nuseEffect(() => {\r\n  {\r\n    db.collection(\"restaurants\").doc(\"123\").collection(\"reviews\").get()\r\n.then(querySnapshot => {\r\n    querySnapshot.forEach(doc => {\r\n        console.log(doc.id, \" => \", doc.data());\r\n    });\r\n});\r\n  }\r\n}, [])\r\n  return (\r\n    <LoggedInUserContext.Provider value={{ user, setActiveUser }}>\r\n      <HomeBox>\r\n        <section className=\"feed\">\r\n          {isDrawerBar && (\r\n            <div\r\n              onClick={() => setIsDrawerBar(false)}\r\n              className=\"drawerBarPanel\"\r\n            />\r\n          )}\r\n          <DrawerBar active={isDrawerBar} />\r\n          <div className=\"feed-header\">\r\n            <div onClick={() => setIsDrawerBar(true)}>\r\n              <Avatar src={user?.photoUrl} />\r\n            </div>\r\n            <div className=\"feed-headerText\">\r\n              <span>Home</span>\r\n            </div>\r\n            <div className=\"homeColumn\">\r\n              <SettingsIcon className=\"homeIcon\" width={22} height={22} />\r\n            </div>\r\n          </div>\r\n          <TweetBox />\r\n        \r\n          <Feed />\r\n           </section>\r\n      </HomeBox>\r\n    </LoggedInUserContext.Provider>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n"],"sourceRoot":""}